{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ConvNet with PyTorch Getting Started","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMw9PRSDBdM5m+cDt6/S8Sx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"396ade3bd3434023b86429cefe855558":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_e30ba312af834d058adc17a86ba1cd21","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_c525916b898b40139da353d848e93968","IPY_MODEL_795bdf3dea1b47ef93ce6504e10b8f3a"]}},"e30ba312af834d058adc17a86ba1cd21":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c525916b898b40139da353d848e93968":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_200d220ff1154652981ae1f4c0c85409","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b9e0f3bae6ca4520b6275ed247f1a847"}},"795bdf3dea1b47ef93ce6504e10b8f3a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_5147895e88df47db8353d0a77ba2c4fd","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"â€‹","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 170500096/? [00:03&lt;00:00, 56225811.32it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4b19646538274b2a926b82172c921161"}},"200d220ff1154652981ae1f4c0c85409":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b9e0f3bae6ca4520b6275ed247f1a847":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5147895e88df47db8353d0a77ba2c4fd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"4b19646538274b2a926b82172c921161":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"id":"XarB2CzqCett","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607324993161,"user_tz":-345,"elapsed":4708,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"0b18ce73-15d9-426c-bc1a-fa4446eb7555"},"source":["import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","\n","class Net(nn.Module):\n","#nn.module: Convenient way of encapsulating parameters, with helpers for moving them to GPU, exporting, loading, etc \n","  \n","  def __init__(self):\n","    super(Net, self).__init__()\n","    #1 input image channel, 6 output channels, 3x3 square convolution\n","    self.conv1 = nn.Conv2d(1, 6, 3)\n","    self.conv2 = nn.Conv2d(6, 16, 3)\n","    # an affine operation: y = Wx + b\n","    self.fc1 = nn.Linear(16*6*6, 120) # 6x6 from image dimension\n","    self.fc2 = nn.Linear(120, 84)\n","    self.fc3 = nn.Linear(84, 10)\n","\n","  def forward(self, x):\n","    #Max pooling over a (2, 2) windown\n","    x = F.max_pool2d(F.relu(self.conv1(x)), (2, 2))\n","    # If the size is a square you can only specify a single number\n","    x = F.max_pool2d(F.relu(self.conv2(x)), 2)\n","    x = x.view(-1, self.num_flat_features(x))\n","    x = F.relu(self.fc1(x))\n","    x = F.relu(self.fc2(x))\n","    x = self.fc3(x)\n","    return x\n","  \n","  def num_flat_features(self, x):\n","    size = x.size()[1:] # all dimension except the batch dimension\n","    num_features = 1\n","    for s in size:\n","      num_features*=s\n","    return num_features\n","\n","net = Net()\n","print(net)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Net(\n","  (conv1): Conv2d(1, 6, kernel_size=(3, 3), stride=(1, 1))\n","  (conv2): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))\n","  (fc1): Linear(in_features=576, out_features=120, bias=True)\n","  (fc2): Linear(in_features=120, out_features=84, bias=True)\n","  (fc3): Linear(in_features=84, out_features=10, bias=True)\n",")\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fBSRk88-McDa","executionInfo":{"status":"ok","timestamp":1607324998383,"user_tz":-345,"elapsed":1826,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"24f003f2-fe8e-489b-e585-49ba8fbd256f"},"source":["input = torch.randn(1, 1, 32 ,32)\n","out = net(input)\n","print(out)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["tensor([[-0.1232,  0.0254,  0.0727,  0.0372, -0.0126,  0.1052, -0.0456,  0.0718,\n","         -0.1100,  0.0086]], grad_fn=<AddmmBackward>)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WYWtRer6XKJ5","executionInfo":{"status":"ok","timestamp":1607324998897,"user_tz":-345,"elapsed":2022,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["net.zero_grad()\n","out.backward(torch.randn(1, 10))\n"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9ng0UQeRYcmD"},"source":["torch.nn only supports mini-batches. The entire torch.nn package only supports inputs that are a mini-batch of samples, and not a single sample. \n","For example, nn.Conv2d will take in a 4D Tensor of nSamples x nChannels x Height x Width\n","\n","If you have a single sample, just use input.unsqueeze(0) to add a fake batch dimension."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMfI4aaEZf-0","executionInfo":{"status":"ok","timestamp":1607324998899,"user_tz":-345,"elapsed":1608,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"63eb5494-5816-4283-d610-9db4daf9e3de"},"source":["# loss function\n","output = net(input)\n","target= torch.randn(10) # a dummy target, for example\n","target = target.view(1, -1) # make it same shape as output\n","criterion = nn.MSELoss()\n","\n","loss = criterion(output, target)\n","print(loss)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["tensor(1.1765, grad_fn=<MseLossBackward>)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HOIBC2i9cZLq","executionInfo":{"status":"ok","timestamp":1607324998901,"user_tz":-345,"elapsed":1371,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"55973d6b-9b88-4a51-b2bc-700e485cff13"},"source":["print(loss.grad_fn) #MSELoss\n","print(loss.grad_fn.next_functions[0][0]) #linear\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["<MseLossBackward object at 0x7fab801b7780>\n","<AddmmBackward object at 0x7fab801b7828>\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"t5KQdpEQdBvg"},"source":["Backprop\n","\n","To backpropagate the error all we have to do is loss.backward(). You need to clear the existing gradients though, else gradients will be accumulated to existing gradients. Now we shall call loss.backward(), and have a look at conv1's bias gradients before and after the backward. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WtEnioK5dAk6","executionInfo":{"status":"ok","timestamp":1607325011263,"user_tz":-345,"elapsed":1514,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"1fdcb83a-9db5-4bab-b5e5-e532f3336bc8"},"source":["net.zero_grad() #zeroes the gradient buffers of all parameters\n","\n","print('conv1.bias.grad before backward')\n","print(net.conv1.bias.grad)\n","loss.backward()\n","print('conv1.bias.grad after backward')\n","print(net.conv1.bias.grad)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["conv1.bias.grad before backward\n","tensor([0., 0., 0., 0., 0., 0.])\n","conv1.bias.grad after backward\n","tensor([ 0.0089,  0.0101, -0.0077,  0.0075, -0.0025, -0.0045])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Skv6Q44BgF8B"},"source":["Update the weights\n","\n","\n","The simplesr update rule used in practice is the Stochastic Gradient Descent (SGD):\n","\n","weight = weight-learning_rate*gradient"]},{"cell_type":"code","metadata":{"id":"a78xfak1c4vk","executionInfo":{"status":"ok","timestamp":1607325053057,"user_tz":-345,"elapsed":1268,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["learning_rate = 0.01\n","for f in net.parameters():\n","  f.data.sub_(f.grad.data*learning_rate)\n","  "],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"op70dTmziQEY"},"source":["However, as you use neural networks, you want to use various different update rules such as SGD, Nesterov-SGD, Adam, RMSProp, etc, To enable this, we built a small package: torch.optim that implements all these methods. Using it is very simple:"]},{"cell_type":"code","metadata":{"id":"sDhNg-TriOLf","executionInfo":{"status":"ok","timestamp":1607325059404,"user_tz":-345,"elapsed":1302,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["import torch.optim as optim\n","\n","#create your optimizer\n","optimizer = optim.SGD(net.parameters(), lr=0.01)\n","\n","#in your training loop:\n","\n","optimizer.zero_grad() #zero the gradient buffers\n","output = net(input)\n","loss =  criterion(output, target)\n","loss.backward()\n","optimizer.step() #does the update"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uA4IpsEPkfHy"},"source":["**Training a Classifier**\n","\n","Steps:\n","\n","1. Load and normalizing the CIFAR10 training and test datasets using torchvision\n","\n","2. Define a Convolution Neural Network \n","\n","3. Define a loss function\n","\n","4. Train the network on the training data\n","\n","5. Test the network on the test data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":118,"referenced_widgets":["396ade3bd3434023b86429cefe855558","e30ba312af834d058adc17a86ba1cd21","c525916b898b40139da353d848e93968","795bdf3dea1b47ef93ce6504e10b8f3a","200d220ff1154652981ae1f4c0c85409","b9e0f3bae6ca4520b6275ed247f1a847","5147895e88df47db8353d0a77ba2c4fd","4b19646538274b2a926b82172c921161"]},"id":"Usvr01KrkIC8","executionInfo":{"status":"ok","timestamp":1607325073230,"user_tz":-345,"elapsed":7519,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"fd8c8e69-c6c9-4aba-d3b7-604900567a91"},"source":["#loading and normalizing CIFAR10\n","import torch\n","import torchvision\n","import torchvision.transforms as transforms\n","\n","transform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n","\n","trainset = torchvision.datasets.CIFAR10(root = './data', train = True, download = True, transform = transform)\n","\n","trainloader = torch.utils.data.DataLoader(trainset, batch_size = 4, shuffle=True, num_workers=2)\n","\n","testset = torchvision.datasets.CIFAR10(root = './data', train=False, download=True, transform=transform)\n","\n","testloader = torch.utils.data.DataLoader(testset, batch_size =4, shuffle=False, num_workers = 2)\n","\n","classes = ('plane', 'car', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\n"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"396ade3bd3434023b86429cefe855558","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Extracting ./data/cifar-10-python.tar.gz to ./data\n","\n","Files already downloaded and verified\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":138},"id":"a9M5saP_uC1h","executionInfo":{"status":"ok","timestamp":1607325109617,"user_tz":-345,"elapsed":1526,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"49c1c992-1bd7-44f9-e61f-49bf6eb19a2d"},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","def imshow(img):\n","  img = img/2 + 0.5 #unnormalize\n","  npimg = img.numpy()\n","  plt.imshow(np.transpose(npimg, (1, 2, 0)))\n","  plt.show()\n","\n","#get some random training images\n","dataiter = iter(trainloader)\n","images, labels = dataiter.next()\n","\n","#show images\n","imshow(torchvision.utils.make_grid(images))\n","# print(labels)"],"execution_count":15,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"6cjJttDq3mbY"},"source":["**2. Define a Convolution Neural Network**\n","\n"]},{"cell_type":"code","metadata":{"id":"z6hGuao43Xp2","executionInfo":{"status":"ok","timestamp":1607325152619,"user_tz":-345,"elapsed":1832,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["import torch.nn as nn\n","import torch.nn.functional as F\n","\n","class Net(nn.Module):\n","  def __init__ (self):\n","    super(Net, self).__init__()\n","    self.conv1 = nn.Conv2d(3, 6, 5)\n","    self.pool = nn.MaxPool2d(2, 2)\n","    self.conv2 = nn.Conv2d(6, 16, 5)\n","    self.fc1 = nn.Linear(16*5*5, 120)\n","    self.fc2 = nn.Linear(120, 84)\n","    self.fc3 = nn.Linear(84, 10)\n","\n","  def forward (self, x):\n","    x = self.pool(F.relu(self.conv1(x)))\n","    x = self.pool(F.relu(self.conv2(x)))\n","    x = x.view(-1, 16*5*5)\n","    x = F.relu(self.fc1(x))\n","    x = F.relu(self.fc2(x))\n","    x = self.fc3(x)\n","    return x\n","\n","net = Net()\n"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"35X15EFT6RD0"},"source":["**3. Define a Loss function and optimizer**"]},{"cell_type":"code","metadata":{"id":"BWQ8jJgy6OwA","executionInfo":{"status":"ok","timestamp":1607325153322,"user_tz":-345,"elapsed":2343,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["import torch.optim as optim\n","criterion = nn.CrossEntropyLoss()\n","optimizer = optim.SGD(net.parameters(), lr = 0.001, momentum=0.9)\n"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ff6Douye6xlL"},"source":["**4. Train the network**\n","\n","This is when things start to get interesting. We simply have to loop over our data iterator, and feed the inputs to the network and optimize."]},{"cell_type":"code","metadata":{"id":"XjBJp0WI6wSY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607325490703,"user_tz":-345,"elapsed":144404,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"65ac1aee-0943-48b0-dfc0-0077cb20b044"},"source":["for epoch in range(2): #loop over the dataset multiple times\n","  running_loss = 0.0\n","  for i, data in enumerate(trainloader, 0): # enumerate() function takes a collection (e.g. a tuple) and returns it as an enumerate object. Syntax: enumerate(iteratable, start) where iterable is an iteratable object and start is the defining the start number of the enumerate object(defualt is 0)\n","    #get the inputs; data is a list of [inputs, labels]\n","    inputs, labels = data\n","\n","    #zero the parameter gradients\n","    optimizer.zero_grad()\n","\n","    #forward + backward + optimize\n","    outputs = net(inputs)\n","    loss = criterion(outputs, labels)\n","    loss.backward()\n","    optimizer.step()\n","\n","    #print statistics\n","    running_loss +=loss.item()\n","    if i % 2000 == 1999:      #print every 2000 mini-batches\n","      print('[%d, %5d] loss: %.3f' % (epoch + 1, i+1, running_loss/2000))\n","      running_loss = 0.0\n","  \n","print('Finished Training')\n","\n","\n","#let's quickly save our trained model:\n","\n","PATH = './cifar_net.pth'\n","torch.save(net.state_dict(), PATH)\n"],"execution_count":22,"outputs":[{"output_type":"stream","text":["[1,  2000] loss: 1.204\n","[1,  4000] loss: 1.207\n","[1,  6000] loss: 1.194\n","[1,  8000] loss: 1.173\n","[1, 10000] loss: 1.171\n","[1, 12000] loss: 1.183\n","[2,  2000] loss: 1.097\n","[2,  4000] loss: 1.108\n","[2,  6000] loss: 1.093\n","[2,  8000] loss: 1.106\n","[2, 10000] loss: 1.082\n","[2, 12000] loss: 1.072\n","Finished Training\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ziLMYTL3yUvz"},"source":["**5. Test the network on the test data**\n","\n","We have trained the network for 2 passes over the training dataset. But we need to check if the network has learnt anything at all. We will check this by predicting the class label that the neural network outputs, and checking it against the ground-truth. If the prediction is correct, we add the sample to the list of correct predictions. \n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":155},"id":"zWvh_AbwzDev","executionInfo":{"status":"ok","timestamp":1607325602553,"user_tz":-345,"elapsed":1972,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"efe8399e-a3f1-49bb-c5ff-2fbfa82dad45"},"source":["dataiter = iter(testloader)\n","images, labels = dataiter.next()\n","\n","#print images\n","imshow(torchvision.utils.make_grid(images))\n","print('GroungTruth: ', ' '.join('%5s' % classes[labels[j]] for j in range(4)))"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["GroungTruth:    cat  ship  ship plane\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qGA2kHfWxehs"},"source":["Now, let's load back in our saved model."]},{"cell_type":"code","metadata":{"id":"ZI0oesT6z7c9","executionInfo":{"status":"ok","timestamp":1607325628142,"user_tz":-345,"elapsed":1194,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["net = Net()\n","net.load_state_dict(torch.load(PATH))\n","outputs = net(images)"],"execution_count":24,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6JBylxj_0K-A"},"source":["The outputs are energies for the 10 classes. The higher the energy for a class, the more the network thinks that the image is of the particular class. So, let's get the index of the highest energy. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v610DKHk0hCl","executionInfo":{"status":"ok","timestamp":1607325632851,"user_tz":-345,"elapsed":1417,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"89e4cf0e-78ab-45a3-fccd-8ba48ad9d59a"},"source":["_, predicted = torch.max(outputs, 1)\n","\n","print(_)\n","\n","print('Predicted: ', ' '.join('%5s' % classes[predicted[j]] for j in range(4 )))"],"execution_count":25,"outputs":[{"output_type":"stream","text":["tensor([2.5791, 7.7123, 4.9567, 4.2490], grad_fn=<MaxBackward0>)\n","Predicted:    cat  ship   car plane\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4M5J_qPvE4lK"},"source":["Let us look at how the network performs on the whole dataset."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w5ymJCITEsNW","executionInfo":{"status":"ok","timestamp":1607327065687,"user_tz":-345,"elapsed":10128,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"1db8edec-2969-4b00-cba3-0641bfaf6776"},"source":["correct = 0\n","total = 0\n","\n","with torch.no_grad():\n","  for data in testloader:\n","    images, labels = data\n","    outputs = net(images)\n","    _, predicted = torch.max(outputs.data, 1)\n","    total +=labels.size(0)\n","    correct +=(predicted == labels).sum().item()\n","\n","print('Accuracy of the networkk on the 10000 test images: %d %%' % (100*correct/total))"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Accuracy of the networkk on the 10000 test images: 57 %\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Omn4iFIAH-Av"},"source":["Let's see which class performed well and which class did not perform well."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EvE42cE-Hj-Y","executionInfo":{"status":"ok","timestamp":1607328337414,"user_tz":-345,"elapsed":11786,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"9ad986d1-7fb1-4f6c-897a-8ab3a7f645c8"},"source":["class_correct = list(0. for i in range(10))\n","class_total = list(0. for i in range(10))\n","\n","with torch.no_grad():\n","  for data in testloader:\n","    images, labels = data\n","    outputs = net(images)\n","    _, predicted = torch.max(outputs, 1)\n","    c = (predicted ==labels).squeeze()\n","    for i in range(4):\n","      label = labels[i]\n","      class_correct[label] +=c[i].item()\n","      class_total[label] +=1\n","\n","for i in range(10):\n","  print('Accuracy of %5s : %2d %%' % (classes[i], 100*class_correct[i]/class_total[i]))"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Accuracy of plane : 61 %\n","Accuracy of   car : 75 %\n","Accuracy of  bird : 31 %\n","Accuracy of   cat : 44 %\n","Accuracy of  deer : 42 %\n","Accuracy of   dog : 52 %\n","Accuracy of  frog : 65 %\n","Accuracy of horse : 53 %\n","Accuracy of  ship : 72 %\n","Accuracy of truck : 78 %\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HgDiBF1JPbSW"},"source":["**Training on GPU**\n","\n","Just like how you transfer a Tensor onto the GPU, you transfer the neural net onto the GPU."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6T7fHogsO0MT","executionInfo":{"status":"ok","timestamp":1607328927852,"user_tz":-345,"elapsed":1595,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"b82e3823-bdeb-4356-e794-55eb8089b349"},"source":["device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\n","\n","#assuming that we are on a CUDA machine, this should print a CUDA device:\n","\n","print(device)"],"execution_count":38,"outputs":[{"output_type":"stream","text":["cpu\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"MzEhWdNAQYd6"},"source":["Then these methods will recursively go over all modules and convert their parameters and buffers to CUDA tensors:\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"egJYBcmoQRk9","executionInfo":{"status":"ok","timestamp":1607328776601,"user_tz":-345,"elapsed":751,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}},"outputId":"5072321b-5ad6-462b-ca4f-8548ace253f3"},"source":["net.to(device)"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Net(\n","  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n","  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n","  (fc1): Linear(in_features=400, out_features=120, bias=True)\n","  (fc2): Linear(in_features=120, out_features=84, bias=True)\n","  (fc3): Linear(in_features=84, out_features=10, bias=True)\n",")"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"markdown","metadata":{"id":"iK2-5h0ZQ1yt"},"source":["Remember that you will have to send the inputs and targets at every step to the GPU too:"]},{"cell_type":"code","metadata":{"id":"9kFYk4fRQr4G","executionInfo":{"status":"ok","timestamp":1607328894053,"user_tz":-345,"elapsed":1317,"user":{"displayName":"Kishor Kaphle","photoUrl":"","userId":"07772435281134389955"}}},"source":["inputs, labels = data[0].to(device), data[1].to(device)"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"mXZpP9QyRIbn"},"source":[""],"execution_count":null,"outputs":[]}]}